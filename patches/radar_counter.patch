Author: Kai-Uwe

Index: on_firmware/openwrt/package/kernel/mac80211/patches/ath/496_radar_counter.patch
===================================================================
--- /dev/null
+++ on_firmware/openwrt/package/kernel/mac80211/patches/ath/496_radar_counter.patch
@@ -0,0 +1,45 @@
+--- a/drivers/net/wireless/ath/dfs_pattern_detector.c
++++ b/drivers/net/wireless/ath/dfs_pattern_detector.c
+@@ -131,6 +131,8 @@
+ 	&jp_radar_types,
+ };
+ 
++static int radar_found_counter = 0;
++
+ /**
+  * get_dfs_domain_radar_types() - get radar types for a given DFS domain
+  * @param domain DFS domain
+@@ -290,6 +292,15 @@
+ 		dpd_reset(dpd);
+ 	dpd->last_pulse_ts = event->ts;
+ 
++	/* Apply radar threshold according to ETSI EN 301893 V2.1.1, D2.
++	 * Only signals stronger than -64 dBm (at 0 dBi) have to be detected. 
++	 * To be safe we use a very conservative threshold of rssi 20.
++	 */
++
++	if (20 > event->rssi) 
++		return false;
++
++
+ 	/* do type individual pattern matching */
+ 	for (i = 0; i < dpd->num_radar_types; i++) {
+ 		struct pri_detector *pd = cd->detectors[i];
+@@ -297,8 +308,15 @@
+ 		if (ps != NULL) {
+ 			if (rs != NULL)
+ 				memcpy(rs, pd->rs, sizeof(*rs));
+-			ath_dbg(dpd->common, DFS,
+-				"DFS: radar found on freq=%d: id=%d, pri=%d, "
++
++			if (radar_found_counter < 2) {
++				radar_found_counter++;
++				return false;
++			}
++			radar_found_counter = 0;
++
++
++			printk( "DFS: radar found on freq=%d: id=%d, pri=%d, "
+ 				"count=%d, count_false=%d\n",
+ 				event->freq, pd->rs->type_id,
+ 				ps->pri, ps->count, ps->count_falses);
