#!/bin/sh
#
# Dieses Skript enthaelt Funktionen, die fuer Updates altes Firmware-Versionen notwendig sind.
# Alle Funktionen muessen idempotent sein.
#
# Dieses Skript wird nur ein einziges Mal nach einem Upgrade oder der Erstinstallation ausgefuehrt:
#   http://wiki.openwrt.org/doc/uci#defaults
#


# lieber strikte Fehlerpruefungen - wir wollen nix kaputtmachen, wenn es nicht den Erwartungen entspricht
set -eu

. "${IPKG_INSTROOT:-}/usr/lib/opennet/on-helper.sh"


# bis Version v0.4-5: openvpn.opennet_user.comp_lzo=1
# seit Version v0.5 muss die Einstellung einen der folgenden Werte haben: yes/no/adaptive
# bzw. seit Version v0.5 gibt es Sektion nicht mehr (openvpn.opennet_user)
# Status in v0.4-5:
#   ~# uci show|grep lzo
#   on-usergw.opennet_ugw.comp_lzo=1
#   openvpn.opennet_user.comp_lzo=1
#   openvpn.opennet_ugw_erina_on_i_de.comp_lzo=1
#   openvpn.opennet_ugw_subaru_on_i_de.comp_lzo=1
coerce_openvpn_comp_lzo() {
	local new_value
	local key
	# wir wissen nicht genau, ob on-usergw und openvpn existiert - also lieber vorsichtig fragen
	(uci -q show openvpn; uci -q show on-usergw) | grep "\.comp_lzo=[01]$" | while read line; do
		new_value=no
		echo "$line" | grep -q "1$" && new_value=yes
		key=$(echo "$line" | cut -f 1 -d =)
		uci set "$key=$new_value"
	done
	if [ -n "$(uci changes openvpn)" -o -n "$(uci changes | grep "^on-usergw\.")" ]; then
		msg_info "MIGRATION: coerce_openvpn_comp_lzo"
		uci changes | grep -q "^on-usergw\." && uci commit on-usergw
		apply_changes openvpn
	fi
}


# bis Version v0.4-5: die Opennet-Firmware hat die /etc/passwd durch einen Symlink auf /etc/etc_preset/passwd ersetzt
# Bei einem Update wird das symlink-Ziel ersetzt und somit gibt es keine Nutzerdatenbank mehr.
# Dies verhindert jeden telnet/ssh-Login-Versuch. Lediglich das Web-Interface ist nutzbar.
fix_passwd_broken_symlink() {
	local target=/etc/passwd
	if [ -h "$target" -a ! -e "$target" ]; then
		msg_info "MIGRATION: fix_passwd_broken_symlink"
		rm "$target"
		# ein huebscheres here-Document mit Tabulator-Bereinigung ("<<-") funktioniert leider nicht mit busybox
		cat >"$target" << EOF
root:x:0:0:root:/root:/bin/ash
daemon:*:1:1:daemon:/var:/bin/false
ftp:*:55:55:ftp:/home/ftp:/bin/false
network:*:101:101:network:/var:/bin/false
nobody:*:65534:65534:nobody:/var:/bin/false
EOF
		# Ein paar Dienste schlugen aufgrund der fehlenden Nutzerdatenbank fehl.
		# Ein reboot waere schoen - aber kann zukuenftig eventuell irgendwann zu einer Schleife fuehren.
		# Also: manuell einzelne Dienste neu starten.
		/etc/init.d/dnsmasq restart
	fi
}


# bis Version v0.4-5: "firewall reload" fuehrte auch die "include"-Dateien aus (z.B. /etc/firewall.opennet)
# Ab Version v0.5 verwenden wir diese Datei nicht mehr.
# Beispiel (v0.4-5):
#  uci show firewall | grep @include
#  firewall.@include[0]=include
#  firewall.@include[0].path=/etc/firewall.opennet
#  firewall.@include[1]=include
#  firewall.@include[1].path=/etc/firewall.user
fix_firewall_reload() {
	local filename=/etc/firewall.opennet
	local key
	local value
	uci show firewall | grep "@include\[[0-9]\+\]\.path=" | while read line; do
		key=$(echo "$line" | cut -f 1 -d =)
		value=$(echo "$line" | cut -f 2- -d =)
		[ "$value" != "$filename" ] && continue
		# gesamte "include"-Abzweigung loeschen
		uci_delete "${key%.path}"
		uci commit firewall
		rm -f "$filename"
		reload_config || true
		break
	done
	return 0
}


# bis Version 0.4-5 verwendeten wir vollstaendige uci-Sektionen fuer die VPN-Server
# z.B. openvpn.opennet_user
remove_tunnel_openvpn_settings() {
	local uci_prefix=openvpn.opennet_user

	# Abbruch falls die Einstellungen bereits entfernt wurden
	[ -z "$(uci_get "$uci_prefix")" ] && return
	uci delete "$uci_prefix"
	uci commit openvpn
}


# bis Version 0.4-5 wurde folgende Zeile ausgefuehrt:
#   lua -e "require('luci.model.opennet.on_usergw') upgrade()" 2>/dev/null
# Dadurch wurden openvpn-uci-Konfigurationen (z.B. openvpn.opennet_ugw_erina_on_i_de) nach on-usergw.opennet_ugw* Ã¼bertragen.
# Da die openvpn-Konfigurationen nun ein anderes Namensformat haben, loeschen wir sie.
remove_usergw_openvpn_configs() {
	local uci_prefix
	uci show openvpn | grep "^openvpn\.openvpn_ugw_[^.]\+=openvpn$" | cut -f 1 -d = | while read uci_prefix; do
		uci delete "$uci_prefix"
	done
	return 0
}


# Die uci-Sektion on-core.defaults wurde nur bis v0.4-5 verwendet.
# Anschliessend wanderten diese Einstellungen nach /usr/share/opennet/core.defaults.
remove_obsolete_on_core_settings() {
	[ -n "$(uci_get "on-core.defaults")" ] && uci delete "on-core.defaults"
	return 0
}


# bis Version 0.4-5 wurde die Variable "on-usergw.ugwng_hna_mask" verwendet.
remove_obsolete_usergw_settings() {
	[ -n "$(uci_get "on-usergw.ugwng_hna_mask")" ] && uci delete "on-usergw.ugwng_hna_mask"
	return 0
}


# Die uci-Einstellungen "on-openvpn.gate_XY.*" waren bis Version 0.4-5 in Verwendung.
# Anschliessend wurden diese Informationen im Dateisystem gespeichert.
# Im Zweifelsfall (z.B. falls gerade keine Verbindung zum mesh existiert), werden die
# zu uebertragenden Informationen (z.B. die Offsets der Gateways) verworfen.
transfer_gateway_uci_settings() {
	local uci_prefix
	local offset
	local host
	find_all_uci_sections on-openvpn gateway | while read uci_prefix; do
		offset=$(uci_get "${uci_prefix}.etx_offset")
		# uebertrage den Offset in die neue Konfiguration
		if [ -n "$offset" ]; then
			host=$(uci_get "${uci_prefix}.ipaddr")
			(get_services "service=ugw" "host=$host"; get_services "service=gw" "host=$host") | while read service_name; do
				set_service_value "$service_name" "offset" "$offset"
			done
		fi
		uci_delete "$uci_prefix"
	done
	apply_changes on-openvpn
}


# Bis Version 0.4-5 wurde die Datei /etc/crontabs/root einfach ueberschrieben (bzw. erzeugt).
# Die damaligen Zeilen sind spaeter nicht mehr nutzbar, da sie auf /usr/bin/run-parts.sh verweisen (spaeter: "/bin/run-parts").
# Fortan werden die Eintraege manuell hinzugefuegt (siehe /etc/uci-defaults/on-core-init).
remove_crontab_entries() {
	local crontab_file=/etc/crontabs/root
	[ -e "$crontab_file" ] || return 0
	sed -i '/\/usr\/bin\/run-parts\.sh/d' "$crontab_file"
}


coerce_openvpn_comp_lzo
fix_passwd_broken_symlink
fix_firewall_reload
remove_tunnel_openvpn_settings
remove_obsolete_on_core_settings
remove_usergw_openvpn_configs
# Bis Version 0.4-5 hiess die Opennet-Mesh-Firewall-Zone "opennet".
# Mit Version 0.5 wurde die Zone in "on_mesh" umbenannt.
rename_firewall_zone "opennet" "$ZONE_MESH"
# Bis Version 0.4-5 hiess die lokale Zone "local" - bei barrier braker heisst sie nun "lan"
rename_firewall_zone "local" "$ZONE_LOCAL"
remove_crontab_entries

# Diese Aktion startet mit 10 Minuten Verzoegerung im Hintergrund, um vorher ein Empfangen der
# olsrd-Announcements zu ermoeglichen.
run_delayed_in_background 600 transfer_gateway_uci_settings

